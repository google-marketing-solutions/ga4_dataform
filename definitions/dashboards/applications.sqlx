config {
    type: "incremental",
    schema: constants.DASHBOARDS_DATASET,
    description: "This table includes all events connected to applications (calculator, start, nav, submit etc.), to use in analysis or in dashboards, with session information included (session_id, source_medium, landing_page, pages_in_session etc). Specific dimensions that has been added are: product (Privatlån, Bolån etc), type (Flytta bolån, Nytt bolån etc), previous_page_location, previous_submit_location (which page the session visited before submitting an application) and next_page_location. It also includes user parameters (as hasAccount etc), which are connected to a specific session_id, so if a user during a session has logged in, we can see which user parameters that session has, but no information in regards to how many users that has specific user parameter can be calculated with this table.",
    tags: ["all"],
    bigquery: {
      partitionBy: "date"
  }
}

pre_operations {
  declare event_date_checkpoint default (
    ${when(incremental(),
      `select max(date) -3 from ${self()}`,
      `select cast('${constants.START_DATE}' as date format 'yyyymmdd')`)
    }
  )
  ---
  ${when(incremental(),
    `delete from ${self()} where date >= event_date_checkpoint`)
  }
}

with applications as (
  select
    * except (event_date, event_name),
    event_date as date,
    case
      when regexp_contains(event_name, 'transfer|new|commitment|loan_promise|raise|mortgage_indicator') or regexp_contains(page_location, '\\/lana\\/bolan') or regexp_contains(page_location, '\\/lana\\/hemnetkalkyl') or regexp_contains(page_location, '\\/min-ekonomi\\/(pagaende\\-arenden\\/lanelofte|pagaende\\-arenden\\/bolan|mina\\-lan\\/mina\\-bolan)') then "Bolån"
      when regexp_contains(event_name, 'blanco|blanco_loan_protection') or regexp_contains(page_location, '\\/(lana\\/privatlan|lan\\/privatlan)') or regexp_contains(page_location, '\\/lana\\/(blancolan|billan|batlan|energilan|laneskydd|samla\\-lan|hur\\-mycket\\-far\\-jag\\-lana|korkortslan|kokslan|lana\\-till\\-badrum|energilan\\/solcellslan|kontokredit|skoterlan|mc-lan|atv-lan|fritidshus)') or regexp_contains(page_location, '\\/min-ekonomi/(pagaende\\-arenden\\/privatlan|mina\\-lan\\/mina\\-privatlan)') then "Privatlån"
      when regexp_contains(event_name, 'debit_card_application|debit_card_child_application|credit_card_application|ica_student_application|increase_card_credit_application|increase_account_credit_application|bank_account_application|ikk_application') or regexp_contains(page_location, '/kort-och-betala/(jamfor-vara-kort|bankkort|kreditkort|bankkort-barn-och-ungdom|ica-kort-med-betalfunktion|bankkonto|ungdomskonto|ica-student)') or regexp_contains(page_location, '^\\/lana\\/kontokredit') then "Kort"
      when regexp_contains(event_name, 'savings_account_application|savings_account_child_application|isk_account_application|isk_child_account_application|depot_account_application|depot_child_account_application') or regexp_contains(page_location, '/spara/investeringssparkonto|/spara/depakonto/|/spara/sparkonto/|/spara/spara-till-barn/') then "Spara"
    else null end as product,
    case
      when regexp_contains(event_name, 'transfer') or regexp_contains(page_location, '\\/lana\\/bolan\\/(flytta\\-bolan)') then 'Flytta bolån'
      when regexp_contains(event_name, 'new') or regexp_contains(page_location, '\\/lana\\/bolan\\/(bolaneansokan)') then 'Nytt bolån'
      when regexp_contains(event_name, 'commitment|loan_promise') or regexp_contains(page_location, '\\/lana\\/(hemnetkalkyl|bolan\\/lanelofte|bolan\\/hur\\-mycket\\-far\\-jag\\-lana)') or regexp_contains(page_location, '\\/min-ekonomi\\/(pagaende\\-arenden\\/lanelofte)')  then 'Lånelöfte'
      when regexp_contains(event_name, 'raise') or regexp_contains(page_location, '\\/lana\\/bolan\\/(utoka\\-bolan)') then 'Utöka bolån'
      when regexp_contains(event_name, 'blanco') then event_params.loan_purpose
      when regexp_contains(event_name, 'debit_card_child_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/bankkort\\-barn\\-och\\-ungdom') then 'Bankkort barn'
      when regexp_contains(event_name, 'debit_card_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/bankkort') then 'Bankkort'
      when regexp_contains(event_name, 'increase_card_credit_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/kreditkort/utoka-din-kortkredit') then 'Utöka kortkredit'
      when regexp_contains(event_name, 'credit_card_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/kreditkort') then 'Kreditkort'
      when event_name = 'ikk_application' or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/ica\\-kort\\-med\\-betalfunktion') then 'ICA-kort Betala'
      when regexp_contains(event_name, 'ica_student_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/ica\\-student') then 'Stammis Student'
      when regexp_contains(event_name, 'increase_account_credit_application') or regexp_contains(page_location, '\\/lana\\/kontokredit') then 'Kontokredit'
      when regexp_contains(event_name, 'bank_account_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/bankkonto') then 'Bankkonto'
      when regexp_contains(event_name, 'savings_account_application') or regexp_contains(page_location, '\\/spara\\/sparkonto') then 'Sparkonto'
      when regexp_contains(event_name, 'savings_account_child_application') or regexp_contains(page_location, '\\/spara\\/spara\\-till\\-barn') and not regexp_contains(page_location, '\\/vara\\-tips\\/') then 'Sparkonto barn'
      when regexp_contains(event_name, 'isk_account_application') or regexp_contains(page_location, '\\/spara\\/investeringssparkonto') then 'ISK-konto'
      when regexp_contains(event_name, 'isk_child_account_application') or regexp_contains(page_location, '\\/spara\\/spara\\-till\\-barn') then 'ISK-konto barn'
      when regexp_contains(event_name, 'depot_account_application') or regexp_contains(page_location, '\\/spara\\/depakonto') then 'Depåkonto'
      when regexp_contains(event_name, 'depot_child_account_application') or regexp_contains(page_location, '\\/spara\\/spara\\-till\\-barn') then 'Depåkonto barn'
    else null end as type,
    case
      when regexp_contains(event_name, 'application_start') then
      last_value(case 
        when event_name = 'page_view' then 
        previous_page_location 
        end 
        ignore nulls)
      over (
        partition by session_id 
        order by event_timestamp
        ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
      )
      else null
    end as previous_start_location,
    case
      when event_name = 'blanco_loan_protection_cta_click' then page_location
      else null
    end as previous_cta_click_location,
    first_value(case when regexp_contains(event_name, 'application_start') then event_timestamp end ignore nulls)
    over (partition by session_id order by event_timestamp) as application_start_time,
    case
      when event_params.step_text = 'start' then 'Start'
      when event_params.step_text = 'Application Start' then 'Start'
      when event_params.step_text = 'submit' then 'Submit'
      when event_params.step_text = 'Application Submit' then 'Submit'
      when event_params.step_text = 'Application Sign' then 'Sign'
      when regexp_contains(event_name, '_submit') then ifnull(event_params.step_text, 'Submit') 
      when regexp_contains(event_name, '_sign') then ifnull(event_params.step_text, 'Sign')
      when regexp_contains(event_name, '_start') then ifnull(event_params.step_text, 'Start')
      when event_name = 'calculator_nav' then event_params.field
    else event_params.step_text end as step_text,
    case
      when regexp_contains(event_name, 'mortgage_application_submit') then event_params.status
      when regexp_contains(event_name, 'savings_account_application_submit|savings_account_child_application_submit|isk_account_application_submit|isk_child_account_application_submit|depot_account_application_submit|depot_child_account_application_submit|debit_card_application_submit|debit_card_child_application_submit|credit_card_application_submit|ica_student_application_submit|increase_card_credit_application_submit|bank_account_application_submit') or (event_name = 'ikk_application' and event_params.step_text = 'signerad ansökan') then event_params.status
      when event_name = 'blanco_application_submit' then event_params.state
    else null end AS status,
    case 
      when event_name = 'ikk_application' and regexp_contains(event_params.step_text, 'signerad ansökan') then 'ikk_application_submit'
      when event_name = 'savings_account_child_application' and regexp_contains(event_params.step_text, 'signerad ansökan') then 'savings_account_child_application_submit'
    else event_name end as event_name,
  from
    ${ref('event')}
  where 
    event_date >= event_date_checkpoint
    --event_date = '2024-11-07' /* Simply for testing purposes */
    and (regexp_contains(event_name, 'transfer_mortgage_application_|new_mortgage_application_|commitment_mortgage_application_|raise_mortgage_application_|loan_promise_application_') /* Mortgage */
    or regexp_contains(event_name, 'savings_account_application|savings_account_child_application|isk_account_application|isk_child_account_application|depot_account_application|depot_child_account_application') /* Savings */
    or regexp_contains(event_name, 'debit_card_application|debit_card_child_application|credit_card_application|ica_student_application|increase_card_credit_application|increase_account_credit_application|bank_account_application|ikk_application') /* Card */
    or regexp_contains(event_name, 'blanco_loan_protection')
    or regexp_contains(event_name, "blanco_autogiro")
    or event_name = 'blanco_application_start'
    or event_name = 'blanco_application_nav'
    or event_name = 'blanco_application_submit'
    or event_name = 'blanco_application_sign_click'
    or event_name = 'blanco_application_signed'
    or event_name = 'page_view'
    or event_name = 'calculator'
    or event_name = 'calculator_nav'
    or event_name = 'loan_indicator'
    or event_name = 'mortgage_indicator_nav'
    or event_name = 'mortgage_indicator')
    or regexp_contains(event_name, 'button_click|link_click|outbound_link_click|card_click|menu_click|drawer_open')
    and environment = 'prod'
    and not regexp_contains(page_location, 'sandbox')
),

applications_final as (
  select
  * except (event_previous_timestamp, event_bundle_sequence_id, event_server_timestamp_offset, user_id, user_pseudo_id, user_first_touch_timestamp, geo, app_info, is_active_user, traffic_source, stream_id, platform, ecommerce, ga_session_id, ga_session_number, engagement_time_msec, page_title, page_referrer, session_engaged, event_datetime, user_key, ga_session_key, event_traffic_source, collected_traffic_source, event_sort_order, last_non_direct_traffic_source, device, previous_start_location, application_start_time),
  device.category as device,
  case
   when regexp_contains(event_name, 'application') then 
   first_value(
    case 
      when regexp_contains(event_name, 'application_start') then 
      case
        when previous_start_location = '(entrance)' or previous_start_location = '/lana/privatlan/ansok-om-lan/' then 'Landade i ansökningsflödet'
        else previous_start_location end end ignore nulls)
    over (partition by session_id order by event_timestamp)
    when regexp_contains(event_name, 'loan_protection') then 
    first_value(
    case 
      when event_name = 'blanco_loan_protection_cta_click' then 
      case
        when previous_cta_click_location = '(entrance)' then 'Landade i ansökningsflödet'
        else previous_cta_click_location end end ignore nulls)
    over (partition by session_id order by event_timestamp)  
  else null end as previous_submit_location,
  from applications
),

sessions as (
  select
    session_start_date,
    concat(user_pseudo_id,ga_session_id) as session_id,
    pages_in_session,
    events_in_session,
    landing_page,
    concat(last_non_direct_traffic_source.source, " / ", last_non_direct_traffic_source.medium) as source_medium,
    last_non_direct_traffic_source.channel_group,
    last_non_direct_traffic_source.campaign,
    last_non_direct_traffic_source.term as utm_term,
    last_non_direct_traffic_source.content as utm_content
  from
    ${ref('session')}
)

select
  a.date,
  a.device,
  a.page_location,
  a.session_id,
  a.internal_traffic,
  a.environment,
  a.event_timestamp,
  a.previous_page_location,
  a.next_page_location,
  a.previous_submit_location,
  a.product,
  a.type,
  a.step_text,
  a.status,
  a.event_name,
  s.* except (session_id, session_start_date, landing_page),
  regexp_extract(landing_page, r'[^/]+//[^/]+(/[^?]*)') as landing_page,
  case 
    when regexp_contains(a.event_name, '_subm') then sum(a.event_params.value) else null end as event_value,
  case 
    when a.event_name = 'blanco_application_submit' then 'Submit'
    when a.event_name = 'debit_card_child_application_submit' then 'Submit'
    when regexp_contains(a.event_name, '_submit') and a.step_text = 'Kvittens' then 'Submit'
    when a.event_name = 'increase_account_credit_application_subm' then 'Submit'
    when a.event_params.step is not null and a.step_text is not null then concat('Steg ', a.event_params.step, ' - ', a.step_text) 
    when a.event_params.step is not null and a.step_text is null then concat('Steg ', a.event_params.step) 
    else a.step_text end as step,
    a.event_params,
    a.user_params,
from
  applications_final a
  join sessions s on a.session_id = s.session_id
  where source_medium != 'tagassistant.google.com / referral'
group by  
  date,
  device,
  page_location,
  a.session_id,
  internal_traffic,
  environment,
  event_timestamp,
  previous_page_location,
  next_page_location,
  previous_submit_location,
  product,
  type,
  step_text,
  status,
  event_name,
  pages_in_session,
  events_in_session,
  landing_page,
  source_medium,
  channel_group,
  campaign,
  utm_term,
  utm_content,
  event_params,
  user_params