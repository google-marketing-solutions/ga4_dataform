/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
config {
    type: "table",
    schema: constants.INTERMEDIATE_DATASET,
    description: "Adds session specific metrics to the events.",
    tags: ["all"],
    bigquery: {
        clusterBy: ["user_key", "ga_session_key"]
    }
}

with final as (
    select
        user_key,
        ga_session_key,
        ga_session_id,
        user_pseudo_id,
        concat(user_pseudo_id,ga_session_id) as session_id,
        min(datetime(timestamp_seconds(ga_session_id), '${constants.REPORTING_TIME_ZONE}')) as session_start_datetime,
        logical_or(event_name = 'session_start') as has_session_start_event,
        max(session_engaged) as session_engaged,
        round(sum(engagement_time_msec / 1000), 2) as engagement_time_seconds,
        min(datetime(timestamp_seconds(cast(user_first_touch_timestamp / 1000000 as int64)), '${constants.REPORTING_TIME_ZONE}')) as user_first_visit_datetime
    from ${ref('int_event')}
    where ga_session_key is not null
    group by
        user_key,
        ga_session_key,
        ga_session_id,
        user_pseudo_id
)

select
  *
from final
